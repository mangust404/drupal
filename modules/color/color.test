<?php

/**
 * @file
 * Tests for color module.
 */

/**
 * Tests the Color module functionality.
 */
class ColorTestCase extends DrupalWebTestCase {
  protected $big_user;
  protected $themes;
  protected $colorTests;

  public static function getInfo() {
    return array(
      'name' => 'Color functionality',
      'description' => 'Modify the Minnelli and Garland theme colors and make sure the changes are reflected on the frontend',
      'group' => 'Color',
    );
  }

  function setUp() {
    parent::setUp('color');

    // Create users.
    $this->big_user = $this->drupalCreateUser(array('administer site configuration'));

    // This tests the color module in both Minnelli and Garland.
    $this->themes = array(
      'garland' => array(
        'palette_input' => 'palette[link]',
        'scheme' => '#c9c497,#0c7a00,#03961e,#7be000,#494949', // greenbeam
        'scheme_color' => '#0c7a00',
      ),
      'minnelli' => array(
        'palette_input' => 'palette[link]',
        'scheme' => '#d5b048,#6c420e,#331900,#971702,#494949',
        'scheme_color' => '#6c420e',
      ),
    );
    theme_enable(array('minnelli'));

    // Array filled with valid and not valid color values
    $this->colorTests = array(
      '#000' => TRUE,
      '#123456' => TRUE,
      '#abcdef' => TRUE,
      '#0' => FALSE,
      '#00' => FALSE,
      '#0000' => FALSE,
      '#00000' => FALSE,
      '123456' => FALSE,
      '#00000g' => FALSE,
    );
  }

  /**
   * Tests the Color module functionality.
   */
  function testColor() {
    foreach ($this->themes as $theme => $test_values) {
      $this->_testColor($theme, $test_values);
    }
  }

  /**
   * Tests the Color module functionality using the given theme.
   */
  function _testColor($theme, $test_values) {
    variable_set('theme_default', $theme);
    $settings_path = 'admin/build/themes/settings/' . $theme;

    // Make sure user login block is visible for selected theme
    _block_rehash($theme);
    db_query("UPDATE {blocks} SET region = 'left', status = 1 WHERE theme = '%s' AND module = 'user' AND delta IN ('0', '1')", $theme);
    $this->drupalLogin($this->big_user);
    $this->drupalGet($settings_path);
    $this->assertResponse(200);
    $edit['scheme'] = '';
    $edit[$test_values['palette_input']] = '#123456';
    $this->drupalPost($settings_path, $edit, t('Save configuration'));

    $this->drupalGet('<front>');
    $stylesheets = variable_get('color_' . $theme . '_stylesheets', array());
    $this->assertPattern('|' . url($stylesheets[0]) . '|', 'Make sure the color stylesheet is included in the content. (' . $theme . ')');

    $stylesheet_content = join("\n", file($stylesheets[0]));
    $this->assertTrue(strpos($stylesheet_content, 'color: #123456') !== FALSE, 'Make sure the text color we changed is in the color stylesheet. (' . $theme . ')');

    $this->drupalGet($settings_path);
    $this->assertResponse(200);
    $edit['scheme'] = $test_values['scheme'];
    $this->drupalPost($settings_path, $edit, t('Save configuration'));

    $this->drupalGet('<front>');
    $stylesheets = variable_get('color_' . $theme . '_stylesheets', array());
    $stylesheet_content = join("\n", file($stylesheets[0]));
    $this->assertTrue(strpos($stylesheet_content, 'color: ' . $test_values['scheme_color']) !== FALSE, 'Make sure the text color we changed is in the color stylesheet. (' . $theme . ')');

    // Test with aggregated CSS turned on.
    variable_set('preprocess_css', 1);
    $this->drupalGet('<front>');
    $stylesheets = variable_get('drupal_css_cache_files', array());
    $stylesheet_content = '';
    foreach ($stylesheets as $key => $uri) {
      $stylesheet_content .= join("\n", file(realpath($uri)));
    }
    $this->assertTrue(strpos($stylesheet_content, 'public://') === FALSE, 'Make sure the color paths have been translated to local paths. (' . $theme . ')');
    variable_set('preprocess_css', 0);
  }

  /**
   * Tests whether the provided color is valid.
   */
  function testValidColor() {
    variable_set('theme_default', 'minnelli');
    $settings_path = 'admin/build/themes/settings/minnelli';

    // Make sure user login block is visible for selected theme
    _block_rehash('minnelli');
    db_query("UPDATE {blocks} SET region = 'left', status = 1 WHERE theme = '%s' AND module = 'user' AND delta IN ('0', '1')", variable_get('theme_default', 'minnelli'));
    $this->drupalLogin($this->big_user);
    $edit['scheme'] = '';

    foreach ($this->colorTests as $color => $is_valid) {
      $edit['palette[base]'] = $color;
      $this->drupalPost($settings_path, $edit, t('Save configuration'));

      if ($is_valid) {
        $this->assertText('The configuration options have been saved.');
      }
      else {
        $this->assertText('Base color must be a valid hexadecimal CSS color value.');
      }
    }
  }
}
